\name{Observed.Equivalent.DAG}
\alias{Observed.Equivalent.DAG}

\title{
Observed.Equivalent.DAG
}
\description{
This function takes, as input, a Directed Acyclic Graph (DAG) as well as some variables (nodes) that you cannot directly measure (called latent variables).  It then outputs a "new partially oriented"inducing path"" graph, containing only those variables in the original DAG that are observed and that is equivalent to the original DAG in terms of its d-separation claims.  Any data generated by the original DAG must also agree with this new graph in terms of the resulting pattern of (partial) dependencies.  In particular, if the data were generated by the original DAG then these data will also agree with the covariance structure of the new graph.
}
\usage{
Observed.Equivalent.DAG(full.DAG, latents = NA)
}
\arguments{
  \item{full.DAG}{a binary matrix describing the DAG; usually from the DAG function}
  \item{latents}{a vector containing the names of the variables in the full.DAG that are latent (unobserved).  These names must agree with those in full.DAG}
  \item{return.graph}{a logical argument to indicate if you want the graph matrix returned.  Default is FALSE}
}
\details{
The input DAG is a binary matrix that is usually created via the DAG function in the ggm library. The output differs a bit from Spirtes et al (page175).  
First, Spirtes uses X->Y  if EVERY inducing path over the observed variables is out of X and into Y, i.e. if X is a direct cause of Y given the observed variables over all inducing paths.  In this function, X->Y if X is a direct cause of Y given the observed variables over any inducing path.  Thus, X->Y means that X is a direct cause of Y given the observed variables, but X and Y might also have common latent causes.  Thus, X<->Y means that neither X nor Y are ever direct causes of the other given the observed variables, and only have common latent causes.
Second, in this function, X~>Y means that X is an indirect cause of Y given the observed variables but there is no directed path from X to Y.
}
\value{
if return.matrix=TRUE, a matrix showing the cause-effect relationships between the observed variables.
(i,j)=1 if inducing path leaves variable i and goes to j
(i,j)=2 if inducing path goes into variable j from variable i
(i,j)=3 if inducing path goes into variable j from variable i but i is not a direct cause of j
}
\references{

}
\author{
  Bill Shipley
}
\seealso{
\code{\link{DAG}}
}
\examples{
library(ggm)
g <- DAG(B ~ A, C ~ B, D ~ B, E ~ C + D)
Observed.Equivalent.DAG(g, "B")
}
